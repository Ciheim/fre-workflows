#!/bin/bash
set -euo pipefail
set -x

#
# Mask atmos plevel files below surface pressure
#

echo Arguments:
echo "    input dir: $inputDir"
echo "    component(s): $component"
echo Utilities:
type python
type refine_Atmos_no_redux.py

# Verify input directory exists and is a directory
if [[ ! -d $inputDir ]]; then
    err "Error: Input directory '${inputDir}' does not exist or isn't a directory"
    exit 1
fi

# Setup PYTHONPATH and io lists for the data lineage tool
if [[ "$EPMT_DATA_LINEAGE" -eq 1 ]]; then
    export PYTHONPATH=$CYLC_SUITE_DEF_PATH:$PYTHONPATH
    export input_file_list=
    export output_file_list=
    echo "Set PYTHONPATH and created i/o lists"
fi

cd $inputDir

# needs to be *.$component.*.nc
for file in $(find . -maxdepth 1 \( -name "*.$component.nc" -o -name "*.$component.*.nc" \)); do

    file="${file#./}"

    if [[ "$EPMT_DATA_LINEAGE" -eq 1 ]]; then
        hash_val=$(/home/Cole.Harvey/.conda/envs/bloom-filter-env/bin/python \
        -m data_lineage.bloomfilter.HashGen $inputDir/$file)
        export input_file_list="${input_file_list}$file $hash_val,"
        echo "[DATA LINEAGE] Added $file to input list with hash_val: $hash_val"
    fi

    refine_Atmos_no_redux.py $file -o $file.masked -p $file
    if [[ -f $file.masked ]]; then
        mv -f $file.masked $file
        echo "Updated '$file'"
    fi
    
    if [[ "$EPMT_DATA_LINEAGE" -eq 1 ]]; then
        hash_val=$(/home/Cole.Harvey/.conda/envs/bloom-filter-env/bin/python \
        -m data_lineage.bloomfilter.HashGen $inputDir/$file)
        export output_file_list="${output_file_list}$file $hash_val,"
        echo "[DATA LINEAGE] Added $file to output list with hash_val: $hash_val"
    fi
done

if [[ "$EPMT_DATA_LINEAGE" -eq 1 ]]; then

    epmt annotate EPMT_DATA_LINEAGE_IN_PATH="$inputDir/"
    echo "[DATA LINEAGE] Annotated $inputDir/ to EPMT_DATA_LINEAGE_IN_PATH"

    epmt -v annotate EPMT_DATA_LINEAGE_OUT_PATH="$inputDir/"
    echo "[DATA LINEAGE] Annotated $inputDir/ to EPMT_DATA_LINEAGE_OUT_PATH"

    # Annotate to EPMT
    if [ -n "$input_file_list" ]; then
        compressed_bytes=$(/home/Cole.Harvey/.conda/envs/bloom-filter-env/bin/python \
        -m data_lineage.bloomfilter.StringCompression "${input_file_list}")
        epmt -v annotate EPMT_DATA_LINEAGE_IN="${compressed_bytes%*,}"
        echo "[DATA LINEAGE] Annotated input files to EPMT_LINEAGE_IN"
    fi

    if [ -n "$output_file_list" ]; then
        compressed_bytes=$(/home/Cole.Harvey/.conda/envs/bloom-filter-env/bin/python \
        -m data_lineage.bloomfilter.StringCompression "${output_file_list}")
        epmt -v annotate EPMT_DATA_LINEAGE_OUT="${compressed_bytes%*,}"
        echo "[DATA LINEAGE] Annotated output files to EPMT_LINEAGE_OUT"
    fi
fi 

echo Natural end of the atmos plevel masking
exit 0
