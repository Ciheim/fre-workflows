#!/bin/bash
set -euo pipefail
set -x

#
# Combine statics
#

export input_file_list=
export output_file_list=
echo "[COLE] created i/o lists"

echo Arguments:
echo "    input dir: $inputDir"
echo "    output dir: $outputDir"
echo Utilities:
type cdo

# Verify input directory exists and is a directory
if [[ ! -d $inputDir ]]; then
    echo "Error: Input directory '${inputDir}' does not exist or isn't a directory"
    exit 1
fi

# Verify output directory exists and is a directory
if [[ ! -d $outputDir ]]; then
    echo "Error: Output directory '${outputDir}' does not exist or isn't a directory"
    exit 1
fi

cd $inputDir

for comp in $(ls); do
    pushd $comp/P0Y/P0Y || continue

    current_loc=$(pwd)
    input_dir_path=$inputDir/$comp/P0Y/P0Y
    for input_file in $(ls); do 
        cd $input_dir_path
            export input_file_list=${input_file_list}$(shasum -a 1 $input_file),
            echo -e "\n[COLE] added $input_file to input list"
        cd $current_loc
    done 

    mkdir -p $outputDir/$comp
    cdo -O merge *.nc $outputDir/$comp/$comp.static.nc

    output_dir_path=$outputDir/$comp
    cd $output_dir_path
        export output_file_list=${output_file_list}$(shasum -a 1 $comp.static.nc),
        echo -e "\n[COLE] added $comp.static.nc to output list"
    cd $current_loc

    popd
done

echo "[COLE] epmt analysis and annotate"
which epmt

if [[ -n "$input_file_list" ]]; then
    echo -e "\n---input---"
    echo -e "epmt annotate DATA_LINEAGE_IN = \n	${input_file_list%*,}"
    epmt annotate EPMT_DATA_LINEAGE_IN="${input_file_list%*,}"
fi

if [ -n "$output_file_list" ]; then
    echo -e "\n---output---"
    echo -e "epmt annotate DATA_LINEAGE_OUT = \n    ${output_file_list%*,}"
    epmt annotate EPMT_DATA_LINEAGE_OUT="${output_file_list%*,}"
fi

echo Natural end of the static combining
exit 0
