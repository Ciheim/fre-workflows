#!/bin/bash
set -euo pipefail

# for emacs syntax highlighting outside of a bin/ dir
# -*- Shell -*-

#
# use fre-python-tools generate_time_average module to average history files 
#
##debug
#inputDir=$1
#component="buhhhh"
##debug

#echo "gonna try epmt stuff here..."
#which epmt
echo "epmt annotate......"
epmt annotate EPMT_DATA_LINEAGE=FOO.nc,BAR.nc,WHY.nc

echo "module load python..."
module load python
echo "module load fre-nctools..."
module load fre-nctools

echo Arguments:
echo "    cylc share dir: $CYLC_WORKFLOW_SHARE_DIR"
echo "    input dir: $inputDir"
echo "    cycle point: $CYLC_TASK_CYCLE_POINT"
echo "    component: $component"
echo "    TMPDIR (not used yet): ${TMPDIR:=/tmp}"
echo Utilities:
type cylc

#this probably shouldnt be a substitute for a proper "find" command...
echo "resolving target files"
files=($(ls $inputDir/*/*/*/*$component*.nc))
echo "number of target files to average is: ${#files[@]}"
echo ""

echo "BASH_SOURCE[0]=${BASH_SOURCE[0]}"
MY_PYTHON_SCRIPT=$(dirname ${BASH_SOURCE[0]})/../generate_time_averages/generate_time_averages.py
##debug
#MY_PYTHON_SCRIPT=/home/Ian.Laflotte/Working/pp.am5/app/generate-time-averages/generate_time_averages/generate_time_averages.py
##debug
echo "time averaging script: $MY_PYTHON_SCRIPT"

#echo "debug2"
if ls $MY_PYTHON_SCRIPT; then
	echo "script found. proceeding..."
else
	echo "error, script not found."
	exit 1
fi

echo "debug1"
for file in $files; do
    echo "going to time-average file=$file"
	python -O $MY_PYTHON_SCRIPT -i "$file" -o "${file}_out" -p "fre-nctools"
	#python -O $MY_PYTHON_SCRIPT -i "$file" -o "${file}_out" -p "fre-python-tools"
	#python -O $MY_PYTHON_SCRIPT -i "$file" -o "${file}_out" -p "cdo"
	#python -O $MY_PYTHON_SCRIPT -i "$file" -o "${file}_out" -p "nco"
	exit 0
	break
done
exit 1
