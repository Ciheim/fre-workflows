#!jinja2

[meta]
    title = "Postprocessing Example 1"
    description = """
Postprocessing example that includes Bronx-like functionality,
and more (such as multiline descriptions!)
"""
    URL = https://gitlab.gfdl.noaa.gov/fre2/workflows/postprocessing

[scheduler]
    # Implicit tasks are tasks without explicit runtime definitions in [runtime], often typos
    allow implicit tasks = False
    # Configure the directories and files to be included in the remote file installation
    install = app/*, bin/*, etc/*, lib/*

[task parameters]
    realm = atmos, ocean, land, ice

[scheduling]
    initial cycle point = {{ PP_START }}
    final cycle point = {{ PP_STOP }}
    [[graph]]
        P1Y = "pp-starter => stage-history => split-netcdf => rename-split-to-pp"
        1983/P2Y = """
rename-split-to-pp[-P1Y] & rename-split-to-pp => make-timeseries-2yr => remap-pp-components-2yr
"""
        1985/P4Y = "make-timeseries-2yr => make-timeseries-4yr => remap-pp-components-4yr"

[runtime]
    # default config for all tasks
    [[root]]
        init-script = """
            source /home/c2b/miniconda3/etc/profile.d/conda.sh
            conda activate cylc
"""
        env-script = """
            eval $(rose task-env)
            env
"""
        script = rose task-run --verbose
        [[[events]]]
            mail events = startup shutdown aborted timeout stalled inactivity
            submission timeout = P1D

    [[pp-starter]]
        platform = background
        [[[environment]]]
            historyDir = {{ HISTORY_DIR }}

    [[stage-history]]
        pre-script = module load gcp hsm/test
        [[[environment]]]
            historyDir = {{ HISTORY_DIR }}
            ptmpDir = {{ PTMP_DIR }}

    [[split-netcdf]]
        pre-script = module load cdo && mkdir -p $outputDir
        [[[environment]]]
            inputDir = {{ PTMP_DIR }}/{{ HISTORY_DIR }}/$(isodatetime --print-format CCYYMMDD $CYLC_TASK_CYCLE_POINT).nc
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/cycle/$CYLC_TASK_CYCLE_POINT

    [[rename-split-to-pp]]
        pre-script = module load cdo && mkdir -p $outputDir
        [[[environment]]]
            inputDir = $CYLC_WORKFLOW_SHARE_DIR/cycle/$CYLC_TASK_CYCLE_POINT
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/data/native

    [[remap-pp-components-2yr]]
        pre-script = module load cdo && mkdir -p $outputDir
        script = rose task-run --verbose --app-key remap-pp-components
        [[[environment]]]
            inputDir = $CYLC_WORKFLOW_SHARE_DIR/data
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/data/pp
            begin = $(isodatetime --offset=-1PY $CYLC_TASK_CYCLE_POINT)
            chunk = P2Y

    [[remap-pp-components-4yr]]
        pre-script = module load cdo && mkdir -p $outputDir
        script = rose task-run --verbose --app-key remap-pp-components
        [[[environment]]]
            inputDir = $CYLC_WORKFLOW_SHARE_DIR/data
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/data/pp
            begin = $(isodatetime --offset=-3PY $CYLC_TASK_CYCLE_POINT)
            chunk = P4Y

    [[make-timeseries-2yr]]
        pre-script = module load cdo && mkdir -p $outputDir
        script = rose task-run --verbose --app-key make-timeseries
        [[[environment]]]
            inputDir = $CYLC_WORKFLOW_SHARE_DIR/data/native
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/data/native
            begin = $(isodatetime --offset=-P1Y $CYLC_TASK_CYCLE_POINT)
            inputChunk = P1Y
            outputChunk = P2Y

    [[make-timeseries-4yr]]
        pre-script = module load cdo && mkdir -p $outputDir
        script = rose task-run --verbose --app-key make-timeseries
        [[[environment]]]
            inputDir = $CYLC_WORKFLOW_SHARE_DIR/data/native
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/data/native
            begin = $(isodatetime --offset=-P3Y $CYLC_TASK_CYCLE_POINT)
            inputChunk = P2Y
            outputChunk = P4Y

# Site-specific settings
{% include 'site/' ~ SITE ~ '.cylc' %}
