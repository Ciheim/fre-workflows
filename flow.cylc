#!jinja2

[meta]
    title = "Postprocessing Example 1"
    description = """
Postprocessing example that includes Bronx-like functionality,
and more (such as multiline descriptions!)
"""
    URL = https://gitlab.gfdl.noaa.gov/fre2/workflows/postprocessing

[scheduler]
    # Implicit tasks are tasks without explicit runtime definitions in [runtime], often typos
    allow implicit tasks = False
    # Configure the directories and files to be included in the remote file installation
    install = app/*, bin/*, etc/*, lib/*

[task parameters]
    realm = atmos, ocean, land, ice

[scheduling]
    initial cycle point = {{PP_START}}
    final cycle point = {{PP_STOP}}
    [[graph]]
        # do every year
        P1Y = "pp-starter => stage-history => split-netcdf"
        # do every CHUNK-A (e.g. 5-yr)
        0005/P5Y = """
split-netcdf[-P4Y] & split-netcdf[-P3Y] & split-netcdf[-P2Y] & split-netcdf[-P1Y] & split-netcdf =>
postprocess-A<realm>
"""
        # do every CHUNK-B (e.g. 20 yr)
        0020/P20Y = """
postprocess-A<realm>[-P15Y] & postprocess-A<realm>[-P10Y] & postprocess-A<realm>[-P5Y] & postprocess-A<realm> =>
postprocess-B<realm>
"""

[runtime]
    [[root]]
        init-script = """
            source /home/c2b/miniconda3/etc/profile.d/conda.sh
            conda activate cylc
"""
        env-script = """
            eval $(rose task-env)
            env
"""
        script = rose task-run --verbose
        [[[events]]]
            mail events = startup shutdown aborted timeout stalled inactivity
            submission timeout = P1D
        [[[environment]]]
    [[pp-starter]]
        [[[environment]]]
            historyDir = {{ HISTORY_DIR }}
    [[stage-history]]
        platform = slurm_local
        pre-script = module load gcp hsm/test
        execution time limit = PT8H
        [[[directives]]]
            --comment=xtmp
        [[[environment]]]
            historyDir = {{ HISTORY_DIR }}
            ptmpDir = {{ PTMP_DIR }}
    [[split-netcdf]]
        platform = slurm_local
        pre-script = """
            module load cdo
            mkdir -p $outputDir
"""
        execution time limit = PT4H
        [[[directives]]]
            --comment=xtmp
        [[[environment]]]
            inputDir = {{ PTMP_DIR }}/{{ HISTORY_DIR }}/$(isodatetime --print-format CCYYMMDD $CYLC_TASK_CYCLE_POINT).nc
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/cycle/$CYLC_TASK_CYCLE_POINT/cache
    [[POSTPROCESS]]
    [[postprocess-A<realm>]]
        script = "sleep 60; echo This is a PP script for chunk A"
    [[postprocess-B<realm>]]
        script = "sleep 120; echo This is a PP script for chunk B"
