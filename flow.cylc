#!jinja2

[meta]
    title = "Postprocessing Example 1"
    description = """
Postprocessing example that includes Bronx-like functionality,
and more (such as multiline descriptions!)
"""
    URL = https://gitlab.gfdl.noaa.gov/fre2/workflows/postprocessing

[scheduler]
    # Implicit tasks are tasks without explicit runtime definitions in [runtime], often typos
    allow implicit tasks = False
    # Configure the directories and files to be included in the remote file installation
    install = app/*, bin/*, etc/*, lib/*

[task parameters]
    realm = atmos, ocean, land, ice

[scheduling]
    initial cycle point = {{PP_START}}
    final cycle point = {{PP_STOP}}
    [[graph]]
        # do every year
        P1Y = "pp-starter => stage-history => split-netcdf"
        # do every CHUNK-A (e.g. 5-yr)
        # this is a temporary workaround below. should be set to the PP_START+CHUNKA
        {{PP_STOP}}/P3Y = """
split-netcdf[-P2Y] & split-netcdf[-P1Y] & split-netcdf =>
make-timeseries
"""
        # do every CHUNK-B (e.g. 20 yr)
#        0020/P20Y = """
#postprocess-A<realm>[-P15Y] & postprocess-A<realm>[-P10Y] & postprocess-A<realm>[-P5Y] & postprocess-A<realm> =>
#postprocess-B<realm>
#"""

[runtime]
    # default config for all tasks
    [[root]]
        init-script = """
            source /home/c2b/miniconda3/etc/profile.d/conda.sh
            conda activate cylc
"""
        env-script = """
            eval $(rose task-env)
            env
"""
        script = rose task-run --verbose
        [[[events]]]
            mail events = startup shutdown aborted timeout stalled inactivity
            submission timeout = P1D

    # base config for tasks to be run on PP/AN
    [[PPAN]]
        platform = slurm_local
        execution time limit = PT8H
        [[[directives]]]
            --comment=xtmp

    [[pp-starter]]
        [[[environment]]]
            historyDir = {{ HISTORY_DIR }}

    [[stage-history]]
        pre-script = module load gcp hsm/test
        [[[environment]]]
            historyDir = {{ HISTORY_DIR }}
            ptmpDir = {{ PTMP_DIR }}

    [[split-netcdf]]
        inherit = PPAN
        pre-script = module load cdo && mkdir -p $outputDir
        [[[environment]]]
            inputDir = {{ PTMP_DIR }}/{{ HISTORY_DIR }}/$(isodatetime --print-format CCYYMMDD $CYLC_TASK_CYCLE_POINT).nc
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/cycle/$CYLC_TASK_CYCLE_POINT/native

    [[make-timeseries]]
        inherit = PPAN
        pre-script = module load cdo && mkdir -p $outputDir
        [[[environment]]]
            inputDir = $CYLC_WORKFLOW_SHARE_DIR/cycle
            outputDir = $CYLC_WORKFLOW_SHARE_DIR/data/pp
            begin = $(isodatetime --offset=-P3Y $CYLC_TASK_CYCLE_POINT)
            end = $CYLC_TASK_CYCLE_POINT
